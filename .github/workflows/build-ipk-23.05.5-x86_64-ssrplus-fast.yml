name: Build IPKs Fast (23.05.5 x86_64 | SSR-Plus from kenzok8/small)

on:
  workflow_dispatch:

jobs:
  build-ipk:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install host deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison g++ gawk \
            gcc-multilib gettext git libncurses5-dev libssl-dev python3 \
            unzip zlib1g-dev file wget rsync libelf-dev ccache tar xz-utils jq

      - name: Download OpenWrt SDK (23.05.5 / x86_64)
        run: |
          set -e
          BASE_URL="https://downloads.openwrt.org/releases/23.05.5/targets/x86/64/"
          SDK_TAR="openwrt-sdk-23.05.5-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
          wget -q "${BASE_URL}${SDK_TAR}" -O "${SDK_TAR}"
          tar -xJf "${SDK_TAR}"
          echo "SDK_DIR=$(find . -maxdepth 1 -type d -name 'openwrt-sdk-*' | head -n1)" >> $GITHUB_ENV

      - name: (Optional) Cache dl/ to speed up subsequent runs
        uses: actions/cache@v4
        with:
          path: ${{ env.SDK_DIR }}/dl
          key: sdk-23.05.5-x86_64-dl-${{ hashFiles('.github/workflows/build-ipk-23.05.5-x86_64-ssrplus-fast.yml') }}

      - name: Prepare feeds (23.05 + small) & install indexes
        run: |
          set -e
          cd "$SDK_DIR"
          # 固定到 23.05 分支，并加入 kenzok8/small
          cat > feeds.conf.default <<'EOF'
          src-git packages  https://git.openwrt.org/feed/packages.git;openwrt-23.05
          src-git luci      https://git.openwrt.org/project/luci.git;openwrt-23.05
          src-git small     https://github.com/kenzok8/small-package.git;main
          EOF

          ./scripts/feeds update -a
          # 建立官方 feed 的符号索引，降低“依赖不存在”噪音
          ./scripts/feeds install -a -p packages
          ./scripts/feeds install -a -p luci

          # 去掉 small 里与官方同名、常引发重复定义的包（至少 dnsmasq）
          rm -rf feeds/small/dnsmasq || true

          # 只装要编的包（来自 small）
          ./scripts/feeds install -p small luci-app-ssr-plus
          ./scripts/feeds install -p small shadowsocksr-libev-ssr-local shadowsocksr-libev-ssr-redir
          ./scripts/feeds install -p small luci-i18n-ssr-plus-zh-cn || true

          # LuCI/Lua 主机端工具，避免 po2lmo/lua 相关报错
          make package/po2lmo/host/compile V=s || true
          make package/lua/host/compile V=s || true

      - name: Minimal .config (SSR only, Lua runtime)
        run: |
          set -e
          cd "$SDK_DIR"
          cat > .config <<'EOF'
          # LuCI 基础（用 luci-base 精简，不选大合集 luci）
          CONFIG_PACKAGE_luci-base=y
          CONFIG_PACKAGE_luci-compat=y

          # Lua/LuCI 运行时（SSR+ 控制台是 Lua 写的，23.05 用这套最稳）
          CONFIG_PACKAGE_lua=y
          CONFIG_PACKAGE_liblua=y
          CONFIG_PACKAGE_luci-lua-runtime=y
          CONFIG_PACKAGE_libubus-lua=y
          CONFIG_PACKAGE_libuci-lua=y
          CONFIG_PACKAGE_liblucihttp-lua=y

          # SSR-Plus（来自 kenzok8/small）
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-i18n-ssr-plus-zh-cn=y

          # 仅 SSR（最快）：用户态
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-local=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-redir=y

          # 如需更多转发工具再打开（会变慢）
          # CONFIG_PACKAGE_dns2socks=y
          # CONFIG_PACKAGE_microsocks=y
          # CONFIG_PACKAGE_ipt2socks=y
          # CONFIG_PACKAGE_pdnsd-alt=y
          # CONFIG_PACKAGE_redsocks2=y
          EOF
          make defconfig

      - name: Build IPKs (strict & fast)
        run: |
          set -e
          cd "$SDK_DIR"

          # 先编 SSR+（严格：失败就停，并打印尾 300 行）
          set +e
          make package/luci-app-ssr-plus/compile -j"$(nproc)" 2>&1 | tee build_ssrplus.log
          RC=${PIPESTATUS[0]}
          if [ $RC -ne 0 ]; then
            echo "==== Tail of build_ssrplus.log ===="
            tail -n 300 build_ssrplus.log
            exit $RC
          fi
          set -e

          # 再编 shadowsocksr-libev（包含 ssr-local / ssr-redir）
          make package/shadowsocksr-libev/compile -j"$(nproc)" V=s

          # 收集产物并校验
          mkdir -p ipk_out
          find bin/ -type f -name '*.ipk' -exec cp -av {} ipk_out/ \;

          if ! ls ipk_out/luci-app-ssr-plus_*.ipk >/dev/null 2>&1; then
            echo "FATAL: luci-app-ssr-plus ipk not found."
            exit 2
          fi

          echo "==> Final IPKs:"
          ls -lh ipk_out | sed 's/^/  /'

      - name: Upload IPKs (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: ipk-23.05.5-x86_64-ssrplus-fast
          path: ${{ env.SDK_DIR }}/ipk_out/*.ipk
