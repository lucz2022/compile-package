name: Build IPKs Stable (23.05.5 x86_64 | SSR-Plus)

on:
  workflow_dispatch:

jobs:
  build-ipk:
    runs-on: ubuntu-22.04
    concurrency:
      group: ipk-23.05.5-x86_64
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Install host deps (add cmake/ninja/meson/pkg-config)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential clang flex bison g++ gawk gcc-multilib gettext git \
            libncurses5-dev libssl-dev python3 python3-pip unzip zlib1g-dev file wget rsync \
            libelf-dev ccache tar xz-utils jq cmake ninja-build meson pkg-config

      - name: Download OpenWrt SDK (23.05.5 / x86_64)
        run: |
          set -e
          BASE_URL="https://downloads.openwrt.org/releases/23.05.5/targets/x86/64"
          SDK_TAR="openwrt-sdk-23.05.5-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
          (curl -fL "${BASE_URL}/${SDK_TAR}" -o "${SDK_TAR}") || \
          (curl -fL "https://downloads.cdn.openwrt.org/releases/23.05.5/targets/x86/64/${SDK_TAR}" -o "${SDK_TAR}")
          tar -xJf "${SDK_TAR}"
          echo "SDK_DIR=$(find . -maxdepth 1 -type d -name 'openwrt-sdk-*' | head -n1)" >> $GITHUB_ENV

      - name: (Optional) Cache dl/
        uses: actions/cache@v4
        with:
          path: ${{ env.SDK_DIR }}/dl
          key: sdk-23.05.5-x86_64-dl-${{ hashFiles('.github/workflows/build-ipk-23.05.5-x86_64-ssrplus-stable.yml') }}

      - name: Prepare feeds (23.05 + small) & indexes
        run: |
          set -e
          cd "$SDK_DIR"
          cat > feeds.conf.default <<'EOF'
          src-git packages  https://git.openwrt.org/feed/packages.git;openwrt-23.05
          src-git luci      https://git.openwrt.org/project/luci.git;openwrt-23.05
          src-git small     https://github.com/kenzok8/small-package.git;main
          EOF

          ./scripts/feeds update -a
          # 建立官方 feed 索引（避免 “does not exist” 噪音）
          ./scripts/feeds install -a -p packages
          ./scripts/feeds install -a -p luci

          # 剔除 small 与官方同名的基础包（最小稳定集合）
          rm -rf feeds/small/dnsmasq feeds/small/lua feeds/small/libnftnl feeds/small/nftables feeds/small/libmnl || true

          # 仅装我们要编的包（来自 small）
          ./scripts/feeds install -p small luci-app-ssr-plus
          ./scripts/feeds install -p small shadowsocksr-libev-ssr-local shadowsocksr-libev-ssr-redir
          ./scripts/feeds install -p small luci-i18n-ssr-plus-zh-cn || true

          # 主机端工具（可选但更稳）
          make package/po2lmo/host/compile V=s || true

      - name: Minimal .config (SSR only; disable lucihttp-lua)
        run: |
          set -e
          cd "$SDK_DIR"
          cat > .config <<'EOF'
          # LuCI 基础（精简）
          CONFIG_PACKAGE_luci-base=y
          CONFIG_PACKAGE_luci-compat=y

          # Lua/LuCI 运行时（供 LuCI/SSR+ 使用；由依赖驱动，不手编 lua 包）
          CONFIG_PACKAGE_lua=y
          CONFIG_PACKAGE_liblua=y
          CONFIG_PACKAGE_luci-lua-runtime=y
          CONFIG_PACKAGE_libubus-lua=y
          CONFIG_PACKAGE_libuci-lua=y

          # 关键：明确关闭 lucihttp 的 Lua 绑定，避免编译期找 lua.h
          # CONFIG_PACKAGE_liblucihttp-lua is not set

          # SSR-Plus（small）
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-i18n-ssr-plus-zh-cn=y

          # SSR 用户态（最快）
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-local=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-redir=y
          EOF
          make defconfig

      - name: Build lucihttp first (verbose, single job)
        run: |
          set -e
          cd "$SDK_DIR"
          # 先单独把 lucihttp 编出来；-j1 V=s 给出完整错误，如仍失败易定位
          make package/feeds/luci/lucihttp/compile -j1 V=s

      - name: Build SSR-Plus & SSR backend
        run: |
          set -e
          cd "$SDK_DIR"
          # 编 SSR-Plus（出现错误会打印尾部日志）
          set +e
          make package/luci-app-ssr-plus/compile -j"$(nproc)" 2>&1 | tee build_ssrplus.log
          RC=${PIPESTATUS[0]}
          if [ $RC -ne 0 ]; then
            echo "==== Tail of build_ssrplus.log ===="; tail -n 300 build_ssrplus.log
            exit $RC
          fi
          set -e
          # 编 SSR 后端（ssr-local / ssr-redir）
          make package/shadowsocksr-libev/compile -j"$(nproc)" V=s

          # 收集产物
          mkdir -p ipk_out
          find bin/ -type f -name '*.ipk' -exec cp -av {} ipk_out/ \;
          if ! ls ipk_out/luci-app-ssr-plus_*.ipk >/dev/null 2>&1; then
            echo "FATAL: luci-app-ssr-plus ipk not found."; exit 2
          fi
          ls -lh ipk_out

      - name: Upload IPKs
        uses: actions/upload-artifact@v4
        with:
          name: ipk-23.05.5-x86_64-ssrplus-stable
          path: ${{ env.SDK_DIR }}/ipk_out/*.ipk
